[gcode_macro Probe_Deploy]
gcode: 
  SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode: 
  SET_PIN PIN=probe_enable VALUE=0

[gcode_macro M106]
rename_existing: M106.0
description: Override the fan speed that scales the Maglev fan to a fully usable input range
gcode:
  {% set SpeedInput = params.S|default(0)|float %}
  #{% set OffBelow = (printer.configfile.settings.fan.off_below|default(0)|float) %}
  #{% set OffBelow = 0.49|float %}
  {% set OffBelow = 0.19|float %}

  {% set MinSpeed = [(255 * OffBelow), 0]|max|int %}

  # Make sure that the only time the fan is off is when the input is 0
  {% if SpeedInput == 0 %}
    {% set ScaledSpeed = 0 %}
  {% else %}
    {% set ScaledSpeed = (MinSpeed + ((255 - MinSpeed) * (SpeedInput / 255)))|int %}
  {% endif %}

  # RESPOND MSG="Setting fan speed to { ScaledSpeed }!"

  M106.0 S{ ScaledSpeed}

  [gcode_macro _START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set STANDBY_TEMP = params.STANDBY_TEMP|default(-1)|float %}
  {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(0.4)|float %}
  {% set RETRACT_SPEED = params.RETRACT_SPEED|default(35)|float %}
  {% set UNRETRACT_EXTRA_LENGTH = params.UNRETRACT_EXTRA_LENGTH|default(0)|float %}
  {% set UNRETRACT_SPEED = params.UNRETRACT_SPEED|default(25)|float %}
  
  {% set STANDBY_TEMP = params.STANDBY_TEMP|default(-1)|float %}

  #RESPOND MSG="RETRACT_LENGTH { RETRACT_LENGTH }!"


  # Set default standby temperature to 75% of the target temperature, rounded to the nearest 5 degrees
  {% if STANDBY_TEMP == -1 %}
    {% set STANDBY_TEMP = ((EXTRUDER_TEMP * 0.75 / 5)|round|int) * 5 %}
  {% endif %}

  CLEAR_PAUSE

  # Start bed heating and keep going
  M140 S{BED_TEMP}
  # Set nozzle to standby temperature and keep going
  M104 S{STANDBY_TEMP}
  # Use absolute coordinates
  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  #SET_GCODE_OFFSET Z=0.0
  # Home the printer

  # Wait for bed to reach temperature
  M190 S{BED_TEMP}
  # Set hotend temperature
  M104 S{EXTRUDER_TEMP}

  {% if 'z' not in printer.toolhead.homed_axes %} 
  	G28
  {% endif %}  

  BED_MESH_PROFILE LOAD="pei"
  SET_RETRACTION RETRACT_LENGTH={RETRACT_LENGTH} RETRACT_SPEED={RETRACT_SPEED} UNRETRACT_EXTRA_LENGTH={UNRETRACT_EXTRA_LENGTH} UNRETRACT_SPEED={UNRETRACT_SPEED}
	G1 F10500
	G92 E0 ;Reset Extruder
	G1 Z2.0 ;Move Z Axis up
	G1 X10.1 Y20 Z0.28 ;Move to start position

  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}

	G1 X10.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
	G1 X10.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
	G1 X10.4 Y20 Z0.28 F1500.0 E30 ;Draw the second line
	G92 E0 ;Reset Extruder
	G1 F10500
	G1 Z2.0 ;Move Z Axis up

[gcode_shell_command poweroff]
command: poweroff
timeout: 30
verbose: False

[gcode_macro poweroff]
description: Unconditionally power off the printer gracefully
gcode:
    SET_PIN PIN=psu_on VALUE=0
    RUN_SHELL_COMMAND CMD=poweroff

# [gcode_macro get_idle_status]
# description: Get idle status
# gcode:
#   RESPOND MSG="Idle Status: {printer.idle_timeout.state}"
#   RESPOND MSG="Temperature: {printer.extruder.temperature}"

[delayed_gcode poweroff_if_idle]
gcode:
  {% if printer.idle_timeout.state|lower == 'idle' and printer.extruder.temperature < 60 %}
    POWEROFF
  {% endif %}

[gcode_macro _END_PRINT]
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0

  # Move nozzle away from print while retracting
  G91
  G1 X-2 Y-2 E-3 F300
  # Raise nozzle by 10mm
	G1 F10500
  G1 Z10
  G90

	G1 X330 Y350

  # Disable steppers
  M84

  UPDATE_DELAYED_GCODE ID=poweroff_if_idle DURATION=605


[gcode_macro SAFE_MOVE]
description: Helper: Safely move to xyz position
gcode:
  {% set x = params.X|default(10)|float %}
  {% set y = params.Y|default(10)|float %}
  {% set z = params.Z|default(10)|float %}
  {% set z_hop_delta = 5.0 %}
  
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}

  {% if act_z + z_hop_delta < z %}
    {% set z_safe = z - act_z %}
  {% elif act_z < (max_z - z_hop_delta) %}
    {% set z_safe = z_hop_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}

  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Printer not homed")}
  {% else %}
    SAVE_GCODE_STATE NAME=safe_move_state
    G91
    G1 Z{z_safe} F1200
    G90
    G1 X{x} Y{y} F12000
    G1 Z{z} F1200
    RESTORE_GCODE_STATE NAME=safe_move_state
  {% endif %}



[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 0.8
gcode:
  ##### set park positon for x and y #####
  {% set x_park = params.X|default(10)|float %}
  {% set y_park = params.Y|default(10)|float %}
  {% set z_park = params.Z|default(100)|float %}

  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    SAVE_GCODE_STATE NAME=park_state
    M83
    G1 E-{extrude} F2100
    RESTORE_GCODE_STATE NAME=park_state
  {% else %}
    RESPOND MSG="Extruder not hot enough to retract"
  {% endif %}
  SAFE_MOVE X={x_park} Y={y_park} Z={z_park}


[gcode_macro SHOW_PROMT_BUTTON_GROUPS]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin MacroPrompt"
    RESPOND TYPE=command MSG="action:prompt_text These are all button colors"
    RESPOND TYPE=command MSG="action:prompt_button default|TEST"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button primary|TEST|primary"
    RESPOND TYPE=command MSG="action:prompt_button secondary|TEST|secondary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button info|TEST|info"
    RESPOND TYPE=command MSG="action:prompt_button warning|TEST|warning"
    RESPOND TYPE=command MSG="action:prompt_button error|TEST|error"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro PARK_TOOLHEAD]
description: Helper: Park toolhead
gcode:
  {% if 'xyz' not in printer.toolhead.homed_axes %} 
    RESPOND TYPE=command MSG="action:prompt_begin MacroPrompt"
    RESPOND TYPE=command MSG="action:prompt_text Printer not homed"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG='action:prompt_button Home and park|_HOME_AND_PARK_TOOLHEAD|primary'
    RESPOND TYPE=command MSG="action:prompt_button Cancel|RESPOND TYPE=command MSG=action:prompt_end|secondary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% else %}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

[gcode_macro _HOME_AND_PARK_TOOLHEAD]
description: Helper: Park toolhead
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  G28
  _TOOLHEAD_PARK_PAUSE_CANCEL


[gcode_macro SERVICE_PARK_TOOLHEAD]
description: Helper: Park toolhead
gcode:
  {% if 'xyz' not in printer.toolhead.homed_axes %} 
    RESPOND TYPE=command MSG="action:prompt_begin MacroPrompt"
    RESPOND TYPE=command MSG="action:prompt_text Printer not homed"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG='action:prompt_button Home and park|_HOME_AND_SERVICE_PARK_TOOLHEAD|primary'
    RESPOND TYPE=command MSG="action:prompt_button Cancel|RESPOND TYPE=command MSG=action:prompt_end|secondary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% else %}
      _SERVICE_PARK_TOOLHEAD
  {% endif %}


[gcode_macro _HOME_AND_SERVICE_PARK_TOOLHEAD]
description: Helper: Service Park toolhead
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  G28
  _SERVICE_PARK_TOOLHEAD


[gcode_macro _SERVICE_PARK_TOOLHEAD]
description: Helper: Center the toolhead to its home position or home if needed
gcode:
  {% set center_x = params.X|default(110)|float %}
  {% set center_y = params.Y|default(140)|float %}
  {% set center_z = params.Z|default(100)|float %}

  {% if 'xyz' not in printer.toolhead.homed_axes %} 
  	G28
  {% else %}
    SAFE_MOVE X={center_x} Y={center_y} Z={center_z}
  {% endif %}


[gcode_macro CENTER_TOOLHEAD]
description: Helper: Center the toolhead to its home position or home if needed
gcode:
  {% set center_x = params.X|default(165)|float %}
  {% set center_y = params.Y|default(175)|float %}
  {% set center_z = params.Z|default(10)|float %}

  {% if 'xyz' not in printer.toolhead.homed_axes %} 
  	G28
  {% else %}
    SAFE_MOVE X={center_x} Y={center_y} Z={center_z}
  {% endif %}

[gcode_macro DISMISS_TOOLHEAD]
description: Helper: Center the toolhead to its home position or home if needed
gcode:
  {% set x_dismiss = printer.toolhead.axis_maximum.x|float - 2.0 %}
  {% set y_dismiss = printer.toolhead.axis_maximum.y|float - 2.0 %}
  {% set z_dismiss = params.Z|default(10)|float %}

  {% if 'xyz' not in printer.toolhead.homed_axes %} 
    RESPOND MSG="Printer not homed"
  {% else %}
    SAFE_MOVE X={x_dismiss} Y={y_dismiss} Z={z_dismiss}
  {% endif %}


[gcode_macro EXTRUDE_TEST]
# Can accurately extrude at at least 300mm/min (5mm/s) but safest to test at 60mm/min (1mm/s)
gcode:
  {% set E = params.E|default(110)|float %}
  {% set F = params.F|default(60)|float %}
  G91
  G1 E{E} F{F}
  G90

[gcode_macro LOAD_FILAMENT]
variable_slow_load_speed:  10
variable_slow_load_distance:  35
variable_fast_load_speed:  15
variable_fast_load_distance:  30
gcode:
  {% set slow_load_speed = params.SLOW_SPEED|default(slow_load_speed)|float %}
  {% set slow_load_distance = params.SLOW_DIST|default(slow_load_distance)|float %}
  {% set fast_load_speed = params.FAST_SPEED|default(fast_load_speed)|float %}
  {% set fast_load_distance = params.FAST_DIST|default(fast_load_distance)|float %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  G92 E0
  G1 E{slow_load_distance} F{slow_load_speed * 60} # slow-load
  G1 E{fast_load_distance} F{fast_load_speed * 60} # fast-load
  RESTORE_GCODE_STATE NAME=load_state
  PURGE_FILAMENT

[gcode_macro PURGE_FILAMENT]
variable_purge_speed:  5
variable_purge_distance: 50
gcode:
  SAVE_GCODE_STATE NAME=purge_state
  G91
  G92 E0
  G1 E{purge_distance} F{purge_speed * 60} # purge
  RESTORE_GCODE_STATE NAME=purge_state



[gcode_macro HOT_HOME_RETILT]
gcode:
  {% set REHEAT_THRESHOLD = params.REHEAT_THRESHOLD|default(4)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}

  RESPOND MSG="Waiting for bed to reach {BED_TEMP + REHEAT_THRESHOLD / 2}C"
  M190 S{BED_TEMP + REHEAT_THRESHOLD / 2}
  SET_HOMING_HEATERS THRESHOLD={REHEAT_THRESHOLD}

  {% if 'z' not in printer.toolhead.homed_axes %} 
  	G28
  {% endif %}
  Z_TILT_ADJUST
  G28
  SET_HOMING_HEATERS
  # Start bed heating to original temp and keep going
  M140 S{BED_TEMP}



[gcode_macro HEATED_BED_MESH]
gcode:
  {% set REHEAT_THRESHOLD = params.REHEAT_THRESHOLD|default(4)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}

  RESPOND MSG="Waiting for bed to reach {BED_TEMP + REHEAT_THRESHOLD / 2}C"
  M190 S{BED_TEMP + REHEAT_THRESHOLD / 2}
  SET_HOMING_HEATERS THRESHOLD={REHEAT_THRESHOLD}

  # Make sure we are homed while the bed is hot
  G28
  BED_MESH_CALIBRATE
  SAVE_CONFIG


[gcode_macro _RETRACT]
description: Slowly retracts the filament by a given distance, default speed 35 mm/s
gcode:
    {% set distance = params.DISTANCE|default(1.0)|float %}
    {% set speed = params.SPEED|default(35.0)|float * 60.0 %}
    G91 ; relative mode
    G1 E-{distance} F{speed} ; retract
    G90 ; absolute mode



# All the below macros are from: https://klipperscreen.readthedocs.io/en/latest/macros/#load_filament-unload_filament

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if park|lower == 'true'%}
    {% if printer.pause_resume.is_paused|lower == 'true' %}
      _TOOLHEAD_PARK_PAUSE_CANCEL
    {% else %}
      DISMISS_TOOLHEAD
    {% endif %}
  {% endif %}

  #TURN_OFF_HEATERS
  # Leave on the bed heater
  M104 S0
  M106 S0

  CANCEL_PRINT_BASE